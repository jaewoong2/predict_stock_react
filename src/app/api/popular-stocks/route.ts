import { NextResponse } from "next/server";
import type { StockData } from "@/types/ticker";

// 예시 데이터
const mockPopularStocks: StockData[] = [
  {
    date: "2025-07-03",
    symbol: "NVDA",
    open_price: 20925.24,
    high_price: 21105.36,
    low_price: 20850.12,
    close_price: 20928,
    volume: 1974636,
    open_change: 0.23,
    close_change: 0.06,
    price_change: 0.06,
    volume_change: -12.5,
  },
  {
    date: "2025-07-03",
    symbol: "에퀴녹스 골드",
    open_price: 7920.5,
    high_price: 8010.24,
    low_price: 7820.15,
    close_price: 7876,
    volume: 395658,
    open_change: -0.32,
    close_change: -0.6,
    price_change: -0.6,
    volume_change: 8.2,
  },
  {
    date: "2025-07-03",
    symbol: "캐너피 그로스",
    open_price: 1690.25,
    high_price: 1875.36,
    low_price: 1685.12,
    close_price: 1738,
    volume: 136300,
    open_change: 5.12,
    close_change: 7.5,
    price_change: 7.5,
    volume_change: 45.6,
  },
  {
    date: "2025-07-03",
    symbol: "업차이나 홀딩스",
    open_price: 62340.5,
    high_price: 62520.24,
    low_price: 62010.15,
    close_price: 62146,
    volume: 93941,
    open_change: 0.12,
    close_change: -0.4,
    price_change: -0.4,
    volume_change: -5.8,
  },
  {
    date: "2025-07-03",
    symbol: "데니슨 마인스",
    open_price: 2460.5,
    high_price: 2485.24,
    low_price: 2430.15,
    close_price: 2471,
    volume: 50772,
    open_change: 0.24,
    close_change: 0.5,
    price_change: 0.5,
    volume_change: 3.2,
  },
  {
    date: "2025-07-03",
    symbol: "타워 세미컨덕터",
    open_price: 60250.5,
    high_price: 63500.24,
    low_price: 60150.15,
    close_price: 63015,
    volume: 49029,
    open_change: 4.8,
    close_change: 6.2,
    price_change: 6.2,
    volume_change: 12.6,
  },
  {
    date: "2025-07-03",
    symbol: "싱크로니 파이낸셜",
    open_price: 94520.5,
    high_price: 95640.24,
    low_price: 94320.15,
    close_price: 95284,
    volume: 41497,
    open_change: 0.65,
    close_change: 0.9,
    price_change: 0.9,
    volume_change: -2.4,
  },
  {
    date: "2025-07-03",
    symbol: "LABD",
    open_price: 9480.5,
    high_price: 9510.24,
    low_price: 9310.15,
    close_price: 9343,
    volume: 34800,
    open_change: -1.2,
    close_change: -1.4,
    price_change: -1.4,
    volume_change: -8.1,
  },
  {
    date: "2025-07-03",
    symbol: "리틀 아메리카스",
    open_price: 3680.5,
    high_price: 3720.24,
    low_price: 3590.15,
    close_price: 3612,
    volume: 24510,
    open_change: -1.5,
    close_change: -1.8,
    price_change: -1.8,
    volume_change: -4.2,
  },
  {
    date: "2025-07-03",
    symbol: "TQQQ",
    open_price: 112050.5,
    high_price: 116230.24,
    low_price: 111980.15,
    close_price: 115180,
    volume: 23098,
    open_change: 2.4,
    close_change: 2.8,
    price_change: 2.8,
    volume_change: 5.6,
  },
];

export async function GET() {
  try {
    // 실제 API에서는 DB나 다른 서비스에서 데이터를 가져오는 로직이 들어갈 수 있습니다.
    return NextResponse.json(mockPopularStocks);
  } catch (error) {
    console.error("인기 주식 데이터를 가져오는 중 오류 발생:", error);
    return NextResponse.json(
      { error: "인기 주식 데이터를 가져오는 중 오류가 발생했습니다." },
      { status: 500 },
    );
  }
}
